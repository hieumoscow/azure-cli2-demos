#!/bin/bash

LOCATION=southeastasia
MY_RG=daz-pgsql-rg
PGSQL_NAME=pgsqlserver4demo
DBADMIN=myadmin
DBPASSWORD=ssssssshhhhhhhss
SUBSCRIPTION_ID=1234567890

# https://docs.microsoft.com/en-us/azure/postgresql/
# https://docs.microsoft.com/en-us/azure/postgresql/overview
# https://docs.microsoft.com/en-us/azure/postgresql/howto-configure-server-parameters-using-cli

# Create Azure Resource Group
az group create --name $MY_RG --location $LOCATION --tags AppService=PostgreSQL Environment=Development Owner=bill@microsoft.com

# Create Azure PostgreSQL Database of 128GB
az postgres server create --resource-group $MY_RG --name $PGSQL_NAME --location southeastasia \
  --admin-user brijraj --admin-password windows@123456 \
  --performance-tier Standard \
  --compute-units 100 \
  --version 9.6 \
  --storage-size 128000 \
  --tags Environment=Development Owner=bill@microsoft.com

# Check the value of *innodb_lock_wait_timeout*
az postgres server configuration show \
   --resource-group $MY_RG \
   --server-name $PGSQL_NAME \
   --name innodb_lock_wait_timeout

# Set value of *innodb_lock_wait_timeout*
az postgres server configuration set \
   --resource-group $MY_RG \
   --server-name $PGSQL_NAME \
   --name innodb_lock_wait_timeout \
   --value 120

# Configure Azure PostgreSQL
az postgres server configuration show --name slow_query_log --resource-group $MY_RG --server $PGSQL_NAME
az postgres server configuration set --name slow_query_log --resource-group $MY_RG --server $PGSQL_NAME --value ON
az postgres server configuration set --name long_query_time --resource-group $MY_RG --server $PGSQL_NAME --value 10
az postgres server firewall-rule create --resource-group $MY_RG --server $PGSQL_NAME --name AllowAll --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255
az postgres server update -g $MY_RG -n $PGSQL_NAME --ssl-enforcement Disabled

# Display Postgresql database config
az postgres server configuration list --resource-group $MY_RG --server $PGSQL_NAME

postgres-client --host ${PGSQL_NAME}.postgres.database.azure.com --user ${DBADMIN}@${PGSQL_NAME} -p

CREATE DATABASE STAFF;
USE staff;
CREATE TABLE editorial (id INT, name VARCHAR(20), email VARCHAR(20));
SHOW tables;
INSERT INTO editorial (id,name,email) VALUES(01,"Olivia","olivia@company.com");
SELECT * FROM editorial;

# Show PostgreSQL Host information, i.e. ACU
az postgres server show --resource-group $MY_RG --name $PGSQL_NAME

# Display CPU Metrics over a set timeframe
az monitor metrics list --resource "/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${MY_RG}/providers/Microsoft.DBforMySQL/servers/${PGSQL_NAME}" --time-grain PT1M --start-time 2017-11-08T07:58:00Z --end-time 2017-11-08T13:30:00Z --metric-names compute_consumption_percent | egrep '(timeStamp|average)'

# Scale Azure PostgreSQL Compute - Switch to 100 ACU (1 vCPU), the output will then say capacity 100
az postgres server update --resource-group $MY_RG --name $PGSQL_NAME --compute-units 100

# Display Postgres Logs modified in the last 72 hours
az postgres server-logs list --resource-group $MY_RG --server $PGSQL_NAME

# Display Postgres Logs modified in the last 1 hour
az postgres server-logs list --resource-group $MY_RG --server $PGSQL_NAME --file-last-written 1

az postgres server-logs download --name 20170414-myserver4demo-postgres.log --resource-group $MY_RG --server $PGSQL_NAME

# Restore backup of Azure MySQL
# Postgres allows you to go back to any point in time in the last up to 35 days and restore this point in time to a new server.
az postgres server restore --resource-group $MY_RG --name mycliserver-restored --restore-point-in-time "2017-11-4 03:10" --source-server-name $PGSQL_NAME

# Remove database and resource group
az postgres server delete --name $PGSQL_NAME --resource-group $MY_RG --yes
az group delete --name $MY_RG --no-wait --yes
